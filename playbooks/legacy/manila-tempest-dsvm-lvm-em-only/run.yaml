- hosts: all
  name: manila-tempest-dsvm-lvm-em-only runs only IPv4 tests, See https://launchpad.net/bugs/1888717
  tasks:
    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              https://opendev.org \
              openstack/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          cat << 'EOF' >>"/tmp/dg-local.conf"
          [[local|localrc]]
          SKIP_EPEL_INSTALL=True
          enable_plugin manila https://opendev.org/openstack/manila
          enable_plugin manila-tempest-plugin https://opendev.org/openstack/manila-tempest-plugin
          EOF
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_PROJECT_FROM_GIT="python-manilaclient"

          export MANILA_INSTALL_TEMPEST_PLUGIN_SYSTEMWIDE=False
          export MANILA_ALLOW_NAS_SERVER_PORTS_ON_HOST=True

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1
          export ENABLED_SERVICES=tempest
          export PROJECTS="openstack/manila-tempest-plugin $PROJECTS"

          function pre_test_hook {
              # 'dhss' - acronym for 'Driver Handles Share Servers',
              # defines mode of a share driver. Boolean-like.
              # 'driver' - codename of a share driver to configure.
              # 'back_end_type' - defines which installation Manila should
              # have - either 'singlebackend' or 'multibackend'.
              source $BASE/new/manila/contrib/ci/pre_test_hook.sh False lvm multibackend
          }
          export -f pre_test_hook

          function post_test_hook {
              # 'back_end_type' - defines which installation Manila is
              # configured to - either 'singlebackend' or 'multibackend'.
              # 'driver' - codename of a share driver that is configured in
              # Manila. It is used for enabling/disabling tests that are not
              # supported by share driver that is used.
              # 'test_type' - defines which set of test suites should be used,
              # can have 'api' and 'scenario' values.
              # 'postgres_enabled' - set of test suites depends on DB backend
              # in some cases, so it is provided explicitely. Boolean-like.
              source $BASE/new/manila/contrib/ci/post_test_hook.sh multibackend lvm api False
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
